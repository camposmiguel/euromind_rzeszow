private class MiRankingTask extends AsyncTask<Void, Void, Void> {
       URL url = null;
       HttpURLConnection urlConnection = null;

       @Override
       protected Void doInBackground(Void... params) {
           Log.e("pruebasa", prefs.getString("puntos", null));
           try {

               url=new URL("http://rest.miguelcr.com/killduck/user?nickname="+prefs.getString("nombre",null)+"&points="+prefs.getString("puntos",null));
               urlConnection = (HttpURLConnection) url.openConnection();
               String responseString = readStream(urlConnection.getInputStream());
               response = new JSONArray(responseString);
               Log.e("tamanio",String.valueOf(response.length()));

                   String userId=response.getJSONObject(0).getString("id");
                   String userRegis=response.getJSONObject(0).getString("nickname");
                   String userPoint=response.getJSONObject(0).getString("points");
                   Log.e("usuarios",userRegis);
                   usuarioactual=new PojoUsuario(userId,userRegis,userPoint);
           } catch (MalformedURLException e) {
               e.printStackTrace();
           } catch (IOException e) {
               e.printStackTrace();
           } catch (JSONException e) {
               e.printStackTrace();
           }


           return null;
       }
       @Override
       protected void onPreExecute() {
           progressDialog = new ProgressDialog(RankingActivity.this);
           progressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
           progressDialog.setMessage("Cargando ranking...");
           progressDialog.setMax(100);
           progressDialog.setCancelable(false);
           progressDialog.show();
       }

       @Override
       protected void onPostExecute(Void aVoid) {
           new UsuariosRankingTask().execute();
       }
   }



   private String readStream(InputStream in) {
       BufferedReader reader = null;
       StringBuffer response = new StringBuffer();
       try {
           reader = new BufferedReader(new InputStreamReader(in));
           String line = "";
           while ((line = reader.readLine()) != null) {
               response.append(line);
           }
       } catch (IOException e) {
           e.printStackTrace();
       } finally {
           if (reader != null) {
               try {
                   reader.close();
               } catch (IOException e) {
                   e.printStackTrace();
               }
           }
       }
       return response.toString();
   }
